{"version":3,"file":"static/js/658.79e70258.chunk.js","mappings":"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","sources":["services/socios.service.js","services/zonas.service.js","pages/socios/SociosList.js"],"sourcesContent":["import {\r\n  collection,\r\n  doc,\r\n  addDoc,\r\n  getDocs,\r\n  getDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  limit,\r\n  startAfter,\r\n  serverTimestamp,\r\n  writeBatch\r\n} from 'firebase/firestore';\r\nimport { db, auth } from './firebase';\r\n\r\nclass SociosService {\r\n  constructor() {\r\n    this.collectionName = 'socios';\r\n  }\r\n\r\n  async createSocio(socioData) {\r\n    try {\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n\r\n      const socio = {\r\n        ...socioData,\r\n        estado: socioData.estado || 'activo',\r\n        fechaRegistro: socioData.fechaRegistro || serverTimestamp(),\r\n        fechaCreacion: serverTimestamp(),\r\n        fechaModificacion: serverTimestamp(),\r\n        creadoPor: currentUser.uid\r\n      };\r\n\r\n      const docRef = await addDoc(collection(db, this.collectionName), socio);\r\n      \r\n      return {\r\n        success: true,\r\n        id: docRef.id,\r\n        message: 'Socio creado exitosamente'\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al crear socio:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async getSocios(options = {}) {\r\n    try {\r\n      const {\r\n        pageSize = 10,\r\n        lastDoc = null,\r\n        searchTerm = '',\r\n        zona = '',\r\n        campana = '',\r\n        estado = '',\r\n        orderField = 'fechaCreacion',\r\n        orderDirection = 'desc'\r\n      } = options;\r\n\r\n      let q = collection(db, this.collectionName);\r\n      const conditions = [];\r\n\r\n      // Filtros\r\n      if (zona) conditions.push(where('zona', '==', zona));\r\n      if (campana) conditions.push(where('campana', '==', campana));\r\n      if (estado) conditions.push(where('estado', '==', estado));\r\n\r\n      // Aplicar condiciones\r\n      if (conditions.length > 0) {\r\n        q = query(q, ...conditions);\r\n      }\r\n\r\n      // Ordenamiento\r\n      q = query(q, orderBy(orderField, orderDirection));\r\n\r\n      // Paginación\r\n      if (lastDoc) {\r\n        q = query(q, startAfter(lastDoc));\r\n      }\r\n      q = query(q, limit(pageSize));\r\n\r\n      const snapshot = await getDocs(q);\r\n      const socios = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n\r\n      // Filtro de búsqueda por texto (lado cliente)\r\n      let filteredSocios = socios;\r\n      if (searchTerm) {\r\n        const term = searchTerm.toLowerCase();\r\n        filteredSocios = socios.filter(socio =>\r\n          (socio.nombres || '').toLowerCase().includes(term) ||\r\n          (socio.apellidos || '').toLowerCase().includes(term) ||\r\n          (socio.celular || '').includes(term)\r\n        );\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        data: filteredSocios,\r\n        lastDoc: snapshot.docs[snapshot.docs.length - 1] || null,\r\n        hasMore: snapshot.docs.length === pageSize\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al obtener socios:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async getSocioById(id) {\r\n    try {\r\n      const docSnap = await getDoc(doc(db, this.collectionName, id));\r\n      \r\n      if (docSnap.exists()) {\r\n        return {\r\n          success: true,\r\n          data: {\r\n            id: docSnap.id,\r\n            ...docSnap.data()\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          error: 'Socio no encontrado'\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al obtener socio:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async updateSocio(id, updates) {\r\n    try {\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n\r\n      const updateData = {\r\n        ...updates,\r\n        fechaModificacion: serverTimestamp(),\r\n        modificadoPor: currentUser.uid\r\n      };\r\n\r\n      await updateDoc(doc(db, this.collectionName, id), updateData);\r\n\r\n      return {\r\n        success: true,\r\n        message: 'Socio actualizado exitosamente'\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al actualizar socio:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async deleteSocio(id) {\r\n    try {\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n\r\n      await deleteDoc(doc(db, this.collectionName, id));\r\n\r\n      return {\r\n        success: true,\r\n        message: 'Socio eliminado exitosamente'\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al eliminar socio:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async getStats() {\r\n    try {\r\n      const snapshot = await getDocs(collection(db, this.collectionName));\r\n      const socios = snapshot.docs.map(doc => doc.data());\r\n\r\n      const total = socios.length;\r\n      const activos = socios.filter(s => s.estado === 'activo').length;\r\n      \r\n      // Socios del mes actual\r\n      const startOfMonth = new Date();\r\n      startOfMonth.setDate(1);\r\n      startOfMonth.setHours(0, 0, 0, 0);\r\n      \r\n      const nuevosMes = socios.filter(s => {\r\n        const fechaCreacion = s.fechaCreacion?.toDate?.() || new Date(s.fechaCreacion);\r\n        return fechaCreacion >= startOfMonth;\r\n      }).length;\r\n\r\n      // Estadísticas por zona\r\n      const zonaStats = {};\r\n      socios.forEach(socio => {\r\n        if (socio.zona) {\r\n          zonaStats[socio.zona] = (zonaStats[socio.zona] || 0) + 1;\r\n        }\r\n      });\r\n\r\n      return {\r\n        success: true,\r\n        data: {\r\n          total,\r\n          activos,\r\n          inactivos: total - activos,\r\n          nuevosMes,\r\n          zonaStats\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al obtener estadísticas:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async bulkDelete(ids) {\r\n    try {\r\n      const batch = writeBatch(db);\r\n      \r\n      ids.forEach(id => {\r\n        const docRef = doc(db, this.collectionName, id);\r\n        batch.delete(docRef);\r\n      });\r\n\r\n      await batch.commit();\r\n\r\n      return {\r\n        success: true,\r\n        message: `${ids.length} socios eliminados exitosamente`\r\n      };\r\n    } catch (error) {\r\n      console.error('Error en eliminación masiva:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async updateEstado(id, nuevoEstado) {\r\n    return this.updateSocio(id, { estado: nuevoEstado });\r\n  }\r\n\r\n  getErrorMessage(error) {\r\n    const errorMessages = {\r\n      'permission-denied': 'No tienes permisos para realizar esta operación',\r\n      'not-found': 'El socio no fue encontrado',\r\n      'unavailable': 'Servicio no disponible. Por favor, intenta más tarde',\r\n      'failed-precondition': 'Error en la operación. Verifica los datos',\r\n      'invalid-argument': 'Datos inválidos proporcionados'\r\n    };\r\n\r\n    if (error.code && errorMessages[error.code]) {\r\n      return errorMessages[error.code];\r\n    }\r\n\r\n    return error.message || 'Ha ocurrido un error inesperado';\r\n  }\r\n}\r\n\r\nexport default new SociosService();","import {\r\n  collection,\r\n  doc,\r\n  addDoc,\r\n  getDocs,\r\n  getDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  serverTimestamp\r\n} from 'firebase/firestore';\r\nimport { db, auth } from './firebase';\r\n\r\nclass ZonasService {\r\n  constructor() {\r\n    this.collectionName = 'zonas';\r\n  }\r\n\r\n  async createZona(zonaData) {\r\n    try {\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n\r\n      const zona = {\r\n        ...zonaData,\r\n        activa: zonaData.activa !== undefined ? zonaData.activa : true,\r\n        fechaCreacion: serverTimestamp(),\r\n        fechaModificacion: serverTimestamp(),\r\n        creadoPor: currentUser.uid\r\n      };\r\n\r\n      const docRef = await addDoc(collection(db, this.collectionName), zona);\r\n      \r\n      return {\r\n        success: true,\r\n        id: docRef.id,\r\n        data: { id: docRef.id, ...zona },\r\n        message: 'Zona creada exitosamente'\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al crear zona'\r\n      };\r\n    }\r\n  }\r\n\r\n  async getZonas() {\r\n    try {\r\n      const q = query(\r\n        collection(db, this.collectionName),\r\n        orderBy('nombre', 'asc')\r\n      );\r\n      \r\n      const snapshot = await getDocs(q);\r\n      const zonas = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n\r\n      return {\r\n        success: true,\r\n        data: zonas\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al obtener zonas'\r\n      };\r\n    }\r\n  }\r\n\r\n  async getZonasActivas() {\r\n    try {\r\n      const q = query(\r\n        collection(db, this.collectionName),\r\n        where('activa', '==', true),\r\n        orderBy('nombre', 'asc')\r\n      );\r\n      \r\n      const snapshot = await getDocs(q);\r\n      const zonas = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n\r\n      return {\r\n        success: true,\r\n        data: zonas\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al obtener zonas activas'\r\n      };\r\n    }\r\n  }\r\n\r\n  async updateZona(id, updates) {\r\n    try {\r\n      await updateDoc(doc(db, this.collectionName, id), {\r\n        ...updates,\r\n        fechaModificacion: serverTimestamp()\r\n      });\r\n\r\n      return {\r\n        success: true,\r\n        message: 'Zona actualizada exitosamente'\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al actualizar zona'\r\n      };\r\n    }\r\n  }\r\n\r\n  async getZonaById(id) {\r\n    try {\r\n      const docSnap = await getDoc(doc(db, this.collectionName, id));\r\n      \r\n      if (docSnap.exists()) {\r\n        return {\r\n          success: true,\r\n          data: {\r\n            id: docSnap.id,\r\n            ...docSnap.data()\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          error: 'Zona no encontrada'\r\n        };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al obtener zona'\r\n      };\r\n    }\r\n  }\r\n\r\n  async deleteZona(id) {\r\n    try {\r\n      // Primero obtener el nombre de la zona para verificar socios\r\n      const zonaDoc = await getDoc(doc(db, this.collectionName, id));\r\n      if (!zonaDoc.exists()) {\r\n        return {\r\n          success: false,\r\n          error: 'Zona no encontrada'\r\n        };\r\n      }\r\n\r\n      const zonaNombre = zonaDoc.data().nombre;\r\n\r\n      // Verificar si hay socios usando esta zona (por nombre, no por ID)\r\n      const sociosSnapshot = await getDocs(\r\n        query(collection(db, 'socios'), where('zona', '==', zonaNombre))\r\n      );\r\n\r\n      if (!sociosSnapshot.empty) {\r\n        return {\r\n          success: false,\r\n          error: `No se puede eliminar la zona \"${zonaNombre}\" porque tiene ${sociosSnapshot.size} socio(s) asociado(s)`\r\n        };\r\n      }\r\n\r\n      await deleteDoc(doc(db, this.collectionName, id));\r\n\r\n      return {\r\n        success: true,\r\n        message: 'Zona eliminada exitosamente'\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al eliminar zona'\r\n      };\r\n    }\r\n  }\r\n\r\n  async getStats() {\r\n    try {\r\n      const zonasSnapshot = await getDocs(collection(db, this.collectionName));\r\n      const sociosSnapshot = await getDocs(collection(db, 'socios'));\r\n      \r\n      const zonas = zonasSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      const socios = sociosSnapshot.docs.map(doc => doc.data());\r\n\r\n      const total = zonas.length;\r\n      const activas = zonas.filter(z => z.activa).length;\r\n\r\n      // Contar socios por zona\r\n      const sociosPorZona = {};\r\n      socios.forEach(socio => {\r\n        if (socio.zona) {\r\n          sociosPorZona[socio.zona] = (sociosPorZona[socio.zona] || 0) + 1;\r\n        }\r\n      });\r\n\r\n      return {\r\n        success: true,\r\n        data: {\r\n          total,\r\n          activas,\r\n          inactivas: total - activas,\r\n          sociosPorZona\r\n        }\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al obtener estadísticas'\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new ZonasService();","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n  Avatar,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Alert,\r\n  CircularProgress,\r\n  Tooltip,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Checkbox,\r\n  Toolbar\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Search as SearchIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Visibility as ViewIcon,\r\n  Clear as ClearIcon,\r\n  KeyboardArrowUp as KeyboardArrowUpIcon,\r\n  KeyboardArrowDown as KeyboardArrowDownIcon\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport sociosService from '../../services/socios.service';\r\nimport zonasService from '../../services/zonas.service';\r\n\r\nfunction SociosList() {\r\n  const navigate = useNavigate();\r\n  \r\n  const [socios, setSocios] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  \r\n  // Filtros y búsqueda\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [zonaFilter, setZonaFilter] = useState('');\r\n  const [estadoFilter, setEstadoFilter] = useState('');\r\n  \r\n  // Opciones para filtros\r\n  const [zonas, setZonas] = useState([]);\r\n  \r\n  // Paginación\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  \r\n  // Ordenamiento\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('dni');\r\n  \r\n  // Diálogo de eliminación\r\n  const [deleteDialog, setDeleteDialog] = useState({\r\n    open: false,\r\n    socio: null\r\n  });\r\n  \r\n  // Selección múltiple\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadInitialData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadSocios();\r\n  }, [searchTerm, zonaFilter, estadoFilter]);\r\n\r\n  const loadInitialData = async () => {\r\n    try {\r\n      const zonasResult = await zonasService.getZonas();\r\n\r\n      if (zonasResult.success) {\r\n        setZonas(Array.isArray(zonasResult.data) ? zonasResult.data : []);\r\n      } else {\r\n        console.error('Error cargando zonas:', zonasResult.error);\r\n        setZonas([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando datos iniciales:', error);\r\n      setZonas([]);\r\n    }\r\n  };\r\n\r\n  const loadSocios = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const result = await sociosService.getSocios({\r\n        searchTerm,\r\n        zona: zonaFilter,\r\n        estado: estadoFilter\r\n      });\r\n\r\n      if (result.success) {\r\n        const sociosData = Array.isArray(result.data) ? result.data : [];\r\n        setSocios(sociosData);\r\n        setSelected([]);\r\n      } else {\r\n        setError(result.error || 'Error al cargar el personal');\r\n        setSocios([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al cargar personal:', error);\r\n      setError('Error al cargar el personal');\r\n      setSocios([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const result = await sociosService.deleteSocio(deleteDialog.socio.id);\r\n      \r\n      if (result.success) {\r\n        setSuccess(result.message);\r\n        loadSocios();\r\n        setDeleteDialog({ open: false, socio: null });\r\n      } else {\r\n        setError(result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al eliminar personal:', error);\r\n      setError('Error al eliminar el personal');\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (selected.length === 0) return;\r\n    \r\n    try {\r\n      const result = await sociosService.bulkDelete(selected);\r\n      \r\n      if (result.success) {\r\n        setSuccess(result.message);\r\n        setSelected([]);\r\n        loadSocios();\r\n      } else {\r\n        setError(result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error en eliminación masiva:', error);\r\n      setError('Error en la eliminación masiva');\r\n    }\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setSearchTerm('');\r\n    setZonaFilter('');\r\n    setEstadoFilter('');\r\n  };\r\n\r\n  const getInitials = (nombres, apellidos) => {\r\n    const n = nombres ? nombres.charAt(0) : '';\r\n    const a = apellidos ? apellidos.charAt(0) : '';\r\n    return (n + a).toUpperCase();\r\n  };\r\n\r\n  // Funciones de ordenamiento\r\n  const handleRequestSort = (property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const descendingComparator = (a, b, orderBy) => {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getComparator = (order, orderBy) => {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  };\r\n\r\n  const stableSort = (array, comparator) => {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  };\r\n\r\n  // Funciones de selección\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelected = socios.map((n) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  // Filtrar y ordenar datos\r\n  const filteredSocios = socios.filter(socio => {\r\n    const matchesSearch = !searchTerm || \r\n      socio.dni?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      socio.nombres?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      socio.apellidos?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      socio.celular?.toLowerCase().includes(searchTerm.toLowerCase());\r\n    \r\n    const matchesZona = !zonaFilter || socio.zona === zonaFilter;\r\n    const matchesEstado = !estadoFilter || socio.estado === estadoFilter;\r\n    \r\n    return matchesSearch && matchesZona && matchesEstado;\r\n  });\r\n\r\n  const sortedSocios = stableSort(filteredSocios, getComparator(order, orderBy));\r\n  const paginatedSocios = sortedSocios.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n\r\n  // Cambiar página\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const columns = [\r\n    { id: 'dni', label: 'DNI', sortable: true, width: 100 },\r\n    { id: 'nombres', label: 'Nombres', sortable: true, width: 140 },\r\n    { id: 'apellidos', label: 'Apellidos', sortable: true, width: 140 },\r\n    { id: 'celular', label: 'Celular', sortable: true, width: 110 },\r\n    { id: 'zona', label: 'Zona', sortable: true, width: 150 },\r\n    { id: 'acciones', label: 'Acciones', sortable: false, width: 150 }\r\n  ];\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Box sx={{ mb: 3 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Lista de Personal\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"text.secondary\">\r\n          Gestiona todo el personal registrado en el sistema\r\n        </Typography>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }} onClose={() => setError('')}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {success && (\r\n        <Alert severity=\"success\" sx={{ mb: 3 }} onClose={() => setSuccess('')}>\r\n          {success}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Filtros y acciones */}\r\n      <Paper sx={{ p: 3, mb: 3 }}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12} md={3}>\r\n            <TextField\r\n              fullWidth\r\n              placeholder=\"Buscar personal por DNI, nombre, apellido o celular...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} />,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={2}>\r\n            <FormControl fullWidth size=\"small\">\r\n              <InputLabel>Zona</InputLabel>\r\n              <Select\r\n                value={zonaFilter}\r\n                label=\"Zona\"\r\n                onChange={(e) => setZonaFilter(e.target.value)}\r\n              >\r\n                <MenuItem value=\"\">Todas</MenuItem>\r\n                {zonas.map((zona) => (\r\n                  <MenuItem key={zona.id} value={zona.nombre}>\r\n                    {zona.nombre}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={2}>\r\n            <FormControl fullWidth size=\"small\">\r\n              <InputLabel>Estado</InputLabel>\r\n              <Select\r\n                value={estadoFilter}\r\n                label=\"Estado\"\r\n                onChange={(e) => setEstadoFilter(e.target.value)}\r\n              >\r\n                <MenuItem value=\"\">Todos</MenuItem>\r\n                <MenuItem value=\"activo\">Activo</MenuItem>\r\n                <MenuItem value=\"inactivo\">Inactivo</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={5}>\r\n            <Box sx={{ display: 'flex', gap: 1, justifyContent: 'flex-end' }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<ClearIcon />}\r\n                onClick={clearFilters}\r\n              >\r\n                Limpiar\r\n              </Button>\r\n              \r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<AddIcon />}\r\n                onClick={() => navigate('/personal/nuevo')}\r\n              >\r\n                Nuevo Personal\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Acciones masivas */}\r\n        {selected.length > 0 && (\r\n          <Box sx={{ mt: 2, p: 2, bgcolor: 'action.selected', borderRadius: 1 }}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              {selected.length} persona(s) seleccionada(s)\r\n            </Typography>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              size=\"small\"\r\n              startIcon={<DeleteIcon />}\r\n              onClick={handleBulkDelete}\r\n            >\r\n              Eliminar seleccionados\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </Paper>\r\n\r\n      {/* Tabla */}\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n        <TableContainer sx={{ maxHeight: 440 }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    indeterminate={selected.length > 0 && selected.length < socios.length}\r\n                    checked={socios.length > 0 && selected.length === socios.length}\r\n                    onChange={handleSelectAllClick}\r\n                  />\r\n                </TableCell>\r\n                <TableCell width={60}>Avatar</TableCell>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    width={column.width}\r\n                    sortDirection={orderBy === column.id ? order : false}\r\n                  >\r\n                    {column.sortable ? (\r\n                      <TableSortLabel\r\n                        active={orderBy === column.id}\r\n                        direction={orderBy === column.id ? order : 'asc'}\r\n                        onClick={() => handleRequestSort(column.id)}\r\n                      >\r\n                        {column.label}\r\n                      </TableSortLabel>\r\n                    ) : (\r\n                      column.label\r\n                    )}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={8} align=\"center\">\r\n                    <CircularProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : paginatedSocios.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={8} align=\"center\">\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      No hay personal registrado\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                paginatedSocios.map((socio) => {\r\n                  const isItemSelected = isSelected(socio.id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      key={socio.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          onChange={(event) => handleClick(event, socio.id)}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Avatar sx={{ width: 32, height: 32, bgcolor: 'primary.main' }}>\r\n                          {getInitials(socio.nombres, socio.apellidos)}\r\n                        </Avatar>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"body2\" fontFamily=\"monospace\" fontWeight=\"bold\">\r\n                          {socio.dni || '-'}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>{socio.nombres || '-'}</TableCell>\r\n                      <TableCell>{socio.apellidos || '-'}</TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"body2\" fontFamily=\"monospace\">\r\n                          {socio.celular || '-'}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Chip \r\n                          label={socio.zona || 'Sin zona'} \r\n                          size=\"small\" \r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n                          <Tooltip title=\"Ver detalles\">\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              onClick={() => navigate(`/personal/ver/${socio.id}`)}\r\n                            >\r\n                              <ViewIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          \r\n                          <Tooltip title=\"Editar\">\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              onClick={() => navigate(`/personal/editar/${socio.id}`)}\r\n                            >\r\n                              <EditIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          \r\n                          <Tooltip title=\"Eliminar\">\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              color=\"error\"\r\n                              onClick={() => setDeleteDialog({ open: true, socio })}\r\n                            >\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        \r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50]}\r\n          component=\"div\"\r\n          count={filteredSocios.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          labelRowsPerPage=\"Filas por página:\"\r\n          labelDisplayedRows={({ from, to, count }) =>\r\n            `${from}-${to} de ${count !== -1 ? count : `más de ${to}`}`\r\n          }\r\n        />\r\n      </Paper>\r\n\r\n      {/* Diálogo de confirmación de eliminación */}\r\n      <Dialog\r\n        open={deleteDialog.open}\r\n        onClose={() => setDeleteDialog({ open: false, socio: null })}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Confirmar Eliminación</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            ¿Estás seguro de que deseas eliminar del personal a{' '}\r\n            <strong>\r\n              {deleteDialog.socio?.nombres} {deleteDialog.socio?.apellidos}\r\n            </strong>\r\n            ?\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n            Esta acción no se puede deshacer.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDeleteDialog({ open: false, socio: null })}>\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"error\" variant=\"contained\">\r\n            Eliminar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SociosList;"],"names":["constructor","this","collectionName","createSocio","socioData","currentUser","auth","Error","socio","estado","fechaRegistro","serverTimestamp","fechaCreacion","fechaModificacion","creadoPor","uid","success","id","addDoc","collection","db","message","error","console","getErrorMessage","getSocios","options","arguments","length","undefined","pageSize","lastDoc","searchTerm","zona","campana","orderField","orderDirection","q","conditions","push","where","query","orderBy","startAfter","limit","snapshot","getDocs","socios","docs","map","doc","data","filteredSocios","term","toLowerCase","filter","nombres","includes","apellidos","celular","hasMore","getSocioById","docSnap","getDoc","exists","updateSocio","updates","updateData","modificadoPor","updateDoc","deleteSocio","deleteDoc","getStats","total","activos","s","startOfMonth","Date","setDate","setHours","nuevosMes","_s$fechaCreacion","_s$fechaCreacion$toDa","toDate","call","zonaStats","forEach","inactivos","bulkDelete","ids","batch","writeBatch","docRef","delete","commit","updateEstado","nuevoEstado","errorMessages","code","createZona","zonaData","activa","getZonas","getZonasActivas","updateZona","getZonaById","deleteZona","zonaDoc","zonaNombre","nombre","sociosSnapshot","empty","size","zonasSnapshot","zonas","activas","z","sociosPorZona","inactivas","_deleteDialog$socio","_deleteDialog$socio2","navigate","useNavigate","setSocios","useState","loading","setLoading","setError","setSuccess","setSearchTerm","zonaFilter","setZonaFilter","estadoFilter","setEstadoFilter","setZonas","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","setOrderBy","deleteDialog","setDeleteDialog","open","selected","setSelected","useEffect","loadInitialData","loadSocios","async","zonasResult","zonasService","Array","isArray","result","sociosService","sociosData","descendingComparator","a","b","_socio$dni","_socio$nombres","_socio$apellidos","_socio$celular","matchesSearch","dni","matchesZona","matchesEstado","paginatedSocios","stableSort","array","comparator","stabilizedThis","el","index","sort","getComparator","slice","_jsxs","Container","maxWidth","children","Box","sx","mb","_jsx","Typography","variant","gutterBottom","color","Alert","severity","onClose","Paper","p","Grid","container","spacing","alignItems","item","xs","md","TextField","fullWidth","placeholder","value","onChange","e","target","InputProps","startAdornment","SearchIcon","mr","FormControl","InputLabel","Select","label","MenuItem","display","gap","justifyContent","Button","startIcon","ClearIcon","onClick","clearFilters","AddIcon","mt","bgcolor","borderRadius","DeleteIcon","width","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","event","newSelected","n","sortable","column","sortDirection","TableSortLabel","active","direction","handleRequestSort","property","TableBody","colSpan","align","CircularProgress","isItemSelected","indexOf","hover","handleClick","selectedIndex","concat","Avatar","height","charAt","toUpperCase","fontFamily","fontWeight","Chip","Tooltip","title","IconButton","ViewIcon","EditIcon","TablePagination","rowsPerPageOptions","component","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","labelRowsPerPage","labelDisplayedRows","_ref","from","to","Dialog","DialogTitle","DialogContent","DialogActions"],"sourceRoot":""}