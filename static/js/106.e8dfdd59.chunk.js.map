{"version":3,"file":"static/js/106.e8dfdd59.chunk.js","mappings":"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","sources":["pages/personal/SociosList.js","services/personal.service.js","services/zonas.service.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n  Avatar,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Alert,\r\n  CircularProgress,\r\n  Tooltip,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Checkbox,\r\n  Toolbar\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Search as SearchIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Visibility as ViewIcon,\r\n  Clear as ClearIcon,\r\n  KeyboardArrowUp as KeyboardArrowUpIcon,\r\n  KeyboardArrowDown as KeyboardArrowDownIcon\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport sociosService from '../../services/personal.service';\r\nimport zonasService from '../../services/zonas.service';\r\n\r\nfunction SociosList() {\r\n  const navigate = useNavigate();\r\n  \r\n  const [socios, setSocios] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  \r\n  // Filtros y búsqueda\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [zonaFilter, setZonaFilter] = useState('');\r\n  const [estadoFilter, setEstadoFilter] = useState('');\r\n  \r\n  // Opciones para filtros\r\n  const [zonas, setZonas] = useState([]);\r\n  \r\n  // Paginación\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  \r\n  // Ordenamiento\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('dni');\r\n  \r\n  // Diálogo de eliminación\r\n  const [deleteDialog, setDeleteDialog] = useState({\r\n    open: false,\r\n    socio: null\r\n  });\r\n  \r\n  // Selección múltiple\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadInitialData();\r\n    // Cargar socios solo una vez al montar el componente\r\n    loadSocios();\r\n  }, []);\r\n\r\n  // Función para manejar búsqueda manual\r\n  const handleSearch = () => {\r\n    loadSocios();\r\n  };\r\n\r\n  // Solo recargar cuando cambia el filtro de zona\r\n  useEffect(() => {\r\n    loadSocios();\r\n  }, [zonaFilter]);\r\n\r\n  const loadInitialData = async () => {\r\n    try {\r\n      const zonasResult = await zonasService.getZonas();\r\n\r\n      if (zonasResult.success) {\r\n        setZonas(Array.isArray(zonasResult.data) ? zonasResult.data : []);\r\n      } else {\r\n        console.error('Error cargando zonas:', zonasResult.error);\r\n        setZonas([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando datos iniciales:', error);\r\n      setZonas([]);\r\n    }\r\n  };\r\n\r\n  const loadSocios = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      console.log('🔍 Aplicando filtros:', { searchTerm, zona: zonaFilter });\r\n      \r\n      const result = await sociosService.getSocios({\r\n        searchTerm,\r\n        zona: zonaFilter\r\n      });\r\n\r\n      if (result.success) {\r\n        const sociosData = Array.isArray(result.data) ? result.data : [];\r\n        setSocios(sociosData);\r\n        setSelected([]);\r\n      } else {\r\n        setError(result.error || 'Error al cargar el personal');\r\n        setSocios([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al cargar personal:', error);\r\n      setError('Error al cargar el personal');\r\n      setSocios([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const result = await sociosService.deleteSocio(deleteDialog.socio.id);\r\n      \r\n      if (result.success) {\r\n        setSuccess(result.message);\r\n        loadSocios();\r\n        setDeleteDialog({ open: false, socio: null });\r\n      } else {\r\n        setError(result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al eliminar personal:', error);\r\n      setError('Error al eliminar el personal');\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (selected.length === 0) return;\r\n    \r\n    try {\r\n      const result = await sociosService.bulkDelete(selected);\r\n      \r\n      if (result.success) {\r\n        setSuccess(result.message);\r\n        setSelected([]);\r\n        loadSocios();\r\n      } else {\r\n        setError(result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error en eliminación masiva:', error);\r\n      setError('Error en la eliminación masiva');\r\n    }\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setSearchTerm('');\r\n    setZonaFilter('');\r\n    // Recargar datos sin filtros\r\n    loadSocios();\r\n  };\r\n\r\n  const getInitials = (nombres, apellidos) => {\r\n    const n = nombres ? nombres.charAt(0) : '';\r\n    const a = apellidos ? apellidos.charAt(0) : '';\r\n    return (n + a).toUpperCase();\r\n  };\r\n\r\n  // Funciones de ordenamiento\r\n  const handleRequestSort = (property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const descendingComparator = (a, b, orderBy) => {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getComparator = (order, orderBy) => {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  };\r\n\r\n  const stableSort = (array, comparator) => {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  };\r\n\r\n  // Funciones de selección\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelected = socios.map((n) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  // Filtrar y ordenar datos (sin filtro de estado)\r\n  const filteredSocios = socios.filter(socio => {\r\n    const matchesSearch = !searchTerm || \r\n      socio.dni?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      socio.nombres?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      socio.apellidos?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      socio.celular?.toLowerCase().includes(searchTerm.toLowerCase());\r\n    \r\n    const matchesZona = !zonaFilter || socio.zona === zonaFilter;\r\n    \r\n    return matchesSearch && matchesZona;\r\n  });\r\n\r\n  const sortedSocios = stableSort(filteredSocios, getComparator(order, orderBy));\r\n  const paginatedSocios = sortedSocios.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n\r\n  // Cambiar página\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const columns = [\r\n    { id: 'dni', label: 'DNI', sortable: true, width: 100 },\r\n    { id: 'nombres', label: 'Nombres', sortable: true, width: 140 },\r\n    { id: 'apellidos', label: 'Apellidos', sortable: true, width: 140 },\r\n    { id: 'celular', label: 'Celular', sortable: true, width: 110 },\r\n    { id: 'zona', label: 'Zona', sortable: true, width: 150 },\r\n    { id: 'acciones', label: 'Acciones', sortable: false, width: 150 }\r\n  ];\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Box sx={{ mb: 3 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Lista de Personal\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"text.secondary\">\r\n          Gestiona todo el personal registrado en el sistema\r\n        </Typography>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }} onClose={() => setError('')}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {success && (\r\n        <Alert severity=\"success\" sx={{ mb: 3 }} onClose={() => setSuccess('')}>\r\n          {success}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Filtros y acciones */}\r\n      <Paper sx={{ p: 3, mb: 3 }}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12} md={3}>\r\n            <Box display=\"flex\" gap={1}>\r\n              <TextField\r\n                fullWidth\r\n                placeholder=\"Buscar personal por DNI, nombre, apellido o celular...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                onKeyPress={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    handleSearch();\r\n                  }\r\n                }}\r\n                InputProps={{\r\n                  startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} />,\r\n                }}\r\n              />\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={handleSearch}\r\n                disabled={loading}\r\n                sx={{ minWidth: 'auto', px: 2 }}\r\n              >\r\n                {loading ? <CircularProgress size={20} /> : <SearchIcon />}\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={2}>\r\n            <FormControl fullWidth size=\"small\">\r\n              <InputLabel>Zona</InputLabel>\r\n              <Select\r\n                value={zonaFilter}\r\n                label=\"Zona\"\r\n                sx={{ minWidth: 120 }}\r\n                onChange={(e) => setZonaFilter(e.target.value)}\r\n              >\r\n                <MenuItem value=\"\">Todas</MenuItem>\r\n                {zonas.map((zona) => (\r\n                  <MenuItem key={zona.id} value={zona.nombre}>\r\n                    {zona.nombre}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={5}>\r\n            <Box sx={{ display: 'flex', gap: 1, justifyContent: 'flex-end' }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<ClearIcon />}\r\n                onClick={clearFilters}\r\n              >\r\n                Limpiar\r\n              </Button>\r\n              \r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<AddIcon />}\r\n                onClick={() => navigate('/personal/nuevo')}\r\n              >\r\n                Nuevo Personal\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Acciones masivas */}\r\n        {selected.length > 0 && (\r\n          <Box sx={{ mt: 2, p: 2, bgcolor: 'action.selected', borderRadius: 1 }}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              {selected.length} persona(s) seleccionada(s)\r\n            </Typography>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              size=\"small\"\r\n              startIcon={<DeleteIcon />}\r\n              onClick={handleBulkDelete}\r\n            >\r\n              Eliminar seleccionados\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </Paper>\r\n\r\n      {/* Tabla */}\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n        <TableContainer sx={{ maxHeight: 440 }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    indeterminate={selected.length > 0 && selected.length < socios.length}\r\n                    checked={socios.length > 0 && selected.length === socios.length}\r\n                    onChange={handleSelectAllClick}\r\n                  />\r\n                </TableCell>\r\n                <TableCell width={60}>Avatar</TableCell>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    width={column.width}\r\n                    sortDirection={orderBy === column.id ? order : false}\r\n                  >\r\n                    {column.sortable ? (\r\n                      <TableSortLabel\r\n                        active={orderBy === column.id}\r\n                        direction={orderBy === column.id ? order : 'asc'}\r\n                        onClick={() => handleRequestSort(column.id)}\r\n                      >\r\n                        {column.label}\r\n                      </TableSortLabel>\r\n                    ) : (\r\n                      column.label\r\n                    )}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={8} align=\"center\">\r\n                    <CircularProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : paginatedSocios.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={8} align=\"center\">\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      No hay personal registrado\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                paginatedSocios.map((socio) => {\r\n                  const isItemSelected = isSelected(socio.id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      key={socio.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          onChange={(event) => handleClick(event, socio.id)}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Avatar sx={{ width: 32, height: 32, bgcolor: 'primary.main' }}>\r\n                          {getInitials(socio.nombres, socio.apellidos)}\r\n                        </Avatar>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"body2\" fontFamily=\"monospace\" fontWeight=\"bold\">\r\n                          {socio.dni || '-'}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>{socio.nombres || '-'}</TableCell>\r\n                      <TableCell>{socio.apellidos || '-'}</TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"body2\" fontFamily=\"monospace\">\r\n                          {socio.celular || '-'}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Chip \r\n                          label={socio.zona || 'Sin zona'} \r\n                          size=\"small\" \r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n                          <Tooltip title=\"Ver detalles\">\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              onClick={() => navigate(`/personal/ver/${socio.id}`)}\r\n                            >\r\n                              <ViewIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          \r\n                          <Tooltip title=\"Editar\">\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              onClick={() => navigate(`/personal/editar/${socio.id}`)}\r\n                            >\r\n                              <EditIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          \r\n                          <Tooltip title=\"Eliminar\">\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              color=\"error\"\r\n                              onClick={() => setDeleteDialog({ open: true, socio })}\r\n                            >\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        \r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50]}\r\n          component=\"div\"\r\n          count={filteredSocios.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          labelRowsPerPage=\"Filas por página:\"\r\n          labelDisplayedRows={({ from, to, count }) =>\r\n            `${from}-${to} de ${count !== -1 ? count : `más de ${to}`}`\r\n          }\r\n        />\r\n      </Paper>\r\n\r\n      {/* Diálogo de confirmación de eliminación */}\r\n      <Dialog\r\n        open={deleteDialog.open}\r\n        onClose={() => setDeleteDialog({ open: false, socio: null })}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Confirmar Eliminación</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            ¿Estás seguro de que deseas eliminar del personal a{' '}\r\n            <strong>\r\n              {deleteDialog.socio?.nombres} {deleteDialog.socio?.apellidos}\r\n            </strong>\r\n            ?\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n            Esta acción no se puede deshacer.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDeleteDialog({ open: false, socio: null })}>\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"error\" variant=\"contained\">\r\n            Eliminar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SociosList;","import {\r\n  collection,\r\n  doc,\r\n  addDoc,\r\n  getDocs,\r\n  getDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  limit,\r\n  startAfter,\r\n  serverTimestamp,\r\n  writeBatch\r\n} from 'firebase/firestore';\r\nimport { db, auth } from './firebase';\r\n\r\nclass SociosService {\r\n  constructor() {\r\n    this.collectionName = 'personal';\r\n  }\r\n\r\n  async createSocio(socioData) {\r\n    try {\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n\r\n      const socio = {\r\n        ...socioData,\r\n        estado: socioData.estado || 'activo',\r\n        fechaRegistro: socioData.fechaRegistro || serverTimestamp(),\r\n        fechaCreacion: serverTimestamp(),\r\n        fechaModificacion: serverTimestamp(),\r\n        creadoPor: currentUser.uid\r\n      };\r\n\r\n      const docRef = await addDoc(collection(db, this.collectionName), socio);\r\n      \r\n      return {\r\n        success: true,\r\n        id: docRef.id,\r\n        message: 'Personal creado exitosamente'\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al crear socio:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async getSocios(options = {}) {\r\n    try {\r\n      const {\r\n        pageSize = 100, // Aumentamos para filtrar del lado cliente\r\n        searchTerm = '',\r\n        zona = '',\r\n        campana = '',\r\n        estado = ''\r\n      } = options;\r\n\r\n      console.log('🔍 Buscando personal con filtros:', { searchTerm, zona, campana, estado });\r\n\r\n      // Query simple sin índices complejos\r\n      let q = collection(db, this.collectionName);\r\n      \r\n      // Solo ordenar por fecha de creación (sin filtros server-side por ahora)\r\n      q = query(q, orderBy('fechaCreacion', 'desc'), limit(pageSize));\r\n\r\n      const snapshot = await getDocs(q);\r\n      let socios = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n\r\n      console.log('📊 Total documentos obtenidos:', socios.length);\r\n\r\n      // FILTROS DEL LADO CLIENTE (temporal hasta crear índices)\r\n      if (zona && zona !== '') {\r\n        socios = socios.filter(socio => socio.zona === zona);\r\n        console.log('🏢 Filtrados por zona:', socios.length);\r\n      } else if (zona === '') {\r\n        console.log('🏢 Mostrando todas las zonas');\r\n      }\r\n\r\n      if (campana) {\r\n        socios = socios.filter(socio => socio.campana === campana);\r\n        console.log('📢 Filtrados por campaña:', socios.length);\r\n      }\r\n\r\n      if (estado) {\r\n        socios = socios.filter(socio => socio.estado === estado);\r\n        console.log('📊 Filtrados por estado:', socios.length);\r\n      }\r\n\r\n      // Filtro de búsqueda por texto\r\n      if (searchTerm) {\r\n        const term = searchTerm.toLowerCase();\r\n        socios = socios.filter(socio =>\r\n          (socio.nombres || '').toLowerCase().includes(term) ||\r\n          (socio.apellidos || '').toLowerCase().includes(term) ||\r\n          (socio.celular || '').includes(term) ||\r\n          (socio.dni || '').includes(term)\r\n        );\r\n        console.log('🔍 Filtrados por búsqueda:', socios.length);\r\n      }\r\n\r\n      console.log('✅ Personal encontrado:', socios.length);\r\n\r\n      return {\r\n        success: true,\r\n        data: socios,\r\n        total: socios.length\r\n      };\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener personal:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async getSocioById(id) {\r\n    try {\r\n      const docSnap = await getDoc(doc(db, this.collectionName, id));\r\n      \r\n      if (docSnap.exists()) {\r\n        return {\r\n          success: true,\r\n          data: {\r\n            id: docSnap.id,\r\n            ...docSnap.data()\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          error: 'Personal no encontrado'\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al obtener personal:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async updateSocio(id, updates) {\r\n    try {\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n\r\n      const updateData = {\r\n        ...updates,\r\n        fechaModificacion: serverTimestamp(),\r\n        modificadoPor: currentUser.uid\r\n      };\r\n\r\n      await updateDoc(doc(db, this.collectionName, id), updateData);\r\n\r\n      return {\r\n        success: true,\r\n        message: 'Personal actualizado exitosamente'\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al actualizar personal:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async deleteSocio(id) {\r\n    try {\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n\r\n      await deleteDoc(doc(db, this.collectionName, id));\r\n\r\n      return {\r\n        success: true,\r\n        message: 'Personal eliminado exitosamente'\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al eliminar personal:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async getStats() {\r\n    try {\r\n      const snapshot = await getDocs(collection(db, this.collectionName));\r\n      const socios = snapshot.docs.map(doc => doc.data());\r\n\r\n      const total = socios.length;\r\n      const activos = socios.filter(s => s.estado === 'activo').length;\r\n      \r\n      // Socios del mes actual\r\n      const startOfMonth = new Date();\r\n      startOfMonth.setDate(1);\r\n      startOfMonth.setHours(0, 0, 0, 0);\r\n      \r\n      const nuevosMes = socios.filter(s => {\r\n        const fechaCreacion = s.fechaCreacion?.toDate?.() || new Date(s.fechaCreacion);\r\n        return fechaCreacion >= startOfMonth;\r\n      }).length;\r\n\r\n      // Estadísticas por zona\r\n      const zonaStats = {};\r\n      socios.forEach(socio => {\r\n        if (socio.zona) {\r\n          zonaStats[socio.zona] = (zonaStats[socio.zona] || 0) + 1;\r\n        }\r\n      });\r\n\r\n      return {\r\n        success: true,\r\n        data: {\r\n          total,\r\n          activos,\r\n          inactivos: total - activos,\r\n          nuevosMes,\r\n          zonaStats\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al obtener estadísticas:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async bulkDelete(ids) {\r\n    try {\r\n      const batch = writeBatch(db);\r\n      \r\n      ids.forEach(id => {\r\n        const docRef = doc(db, this.collectionName, id);\r\n        batch.delete(docRef);\r\n      });\r\n\r\n      await batch.commit();\r\n\r\n      return {\r\n        success: true,\r\n        message: `${ids.length} socios eliminados exitosamente`\r\n      };\r\n    } catch (error) {\r\n      console.error('Error en eliminación masiva:', error);\r\n      return {\r\n        success: false,\r\n        error: this.getErrorMessage(error)\r\n      };\r\n    }\r\n  }\r\n\r\n  async updateEstado(id, nuevoEstado) {\r\n    return this.updateSocio(id, { estado: nuevoEstado });\r\n  }\r\n\r\n  getErrorMessage(error) {\r\n    const errorMessages = {\r\n      'permission-denied': 'No tienes permisos para realizar esta operación',\r\n      'not-found': 'El socio no fue encontrado',\r\n      'unavailable': 'Servicio no disponible. Por favor, intenta más tarde',\r\n      'failed-precondition': 'Error en la operación. Verifica los datos',\r\n      'invalid-argument': 'Datos inválidos proporcionados'\r\n    };\r\n\r\n    if (error.code && errorMessages[error.code]) {\r\n      return errorMessages[error.code];\r\n    }\r\n\r\n    return error.message || 'Ha ocurrido un error inesperado';\r\n  }\r\n}\r\n\r\nexport default new SociosService();","import {\r\n  collection,\r\n  doc,\r\n  addDoc,\r\n  getDocs,\r\n  getDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  serverTimestamp\r\n} from 'firebase/firestore';\r\nimport { db, auth } from './firebase';\r\n\r\nclass ZonasService {\r\n  constructor() {\r\n    this.collectionName = 'zonas';\r\n  }\r\n\r\n  async createZona(zonaData) {\r\n    try {\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n\r\n      const zona = {\r\n        ...zonaData,\r\n        activa: zonaData.activa !== undefined ? zonaData.activa : true,\r\n        fechaCreacion: serverTimestamp(),\r\n        fechaModificacion: serverTimestamp(),\r\n        creadoPor: currentUser.uid\r\n      };\r\n\r\n      const docRef = await addDoc(collection(db, this.collectionName), zona);\r\n      \r\n      return {\r\n        success: true,\r\n        id: docRef.id,\r\n        data: { id: docRef.id, ...zona },\r\n        message: 'Zona creada exitosamente'\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al crear zona'\r\n      };\r\n    }\r\n  }\r\n\r\n  async getZonas() {\r\n    try {\r\n      const q = query(\r\n        collection(db, this.collectionName),\r\n        orderBy('nombre', 'asc')\r\n      );\r\n      \r\n      const snapshot = await getDocs(q);\r\n      const zonas = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n\r\n      return {\r\n        success: true,\r\n        data: zonas\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al obtener zonas'\r\n      };\r\n    }\r\n  }\r\n\r\n  async getZonasActivas() {\r\n    try {\r\n      const q = query(\r\n        collection(db, this.collectionName),\r\n        where('activa', '==', true),\r\n        orderBy('nombre', 'asc')\r\n      );\r\n      \r\n      const snapshot = await getDocs(q);\r\n      const zonas = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n\r\n      return {\r\n        success: true,\r\n        data: zonas\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al obtener zonas activas'\r\n      };\r\n    }\r\n  }\r\n\r\n  async updateZona(id, updates) {\r\n    try {\r\n      await updateDoc(doc(db, this.collectionName, id), {\r\n        ...updates,\r\n        fechaModificacion: serverTimestamp()\r\n      });\r\n\r\n      return {\r\n        success: true,\r\n        message: 'Zona actualizada exitosamente'\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al actualizar zona'\r\n      };\r\n    }\r\n  }\r\n\r\n  async getZonaById(id) {\r\n    try {\r\n      const docSnap = await getDoc(doc(db, this.collectionName, id));\r\n      \r\n      if (docSnap.exists()) {\r\n        return {\r\n          success: true,\r\n          data: {\r\n            id: docSnap.id,\r\n            ...docSnap.data()\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          error: 'Zona no encontrada'\r\n        };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al obtener zona'\r\n      };\r\n    }\r\n  }\r\n\r\n  async deleteZona(id) {\r\n    try {\r\n      // Primero obtener el nombre de la zona para verificar socios\r\n      const zonaDoc = await getDoc(doc(db, this.collectionName, id));\r\n      if (!zonaDoc.exists()) {\r\n        return {\r\n          success: false,\r\n          error: 'Zona no encontrada'\r\n        };\r\n      }\r\n\r\n      const zonaNombre = zonaDoc.data().nombre;\r\n\r\n      // Verificar si hay personal usando esta zona (por nombre, no por ID)\r\n      const personalSnapshot = await getDocs(\r\n        query(collection(db, 'personal'), where('zona', '==', zonaNombre))\r\n      );\r\n\r\n      if (!personalSnapshot.empty) {\r\n        return {\r\n          success: false,\r\n          error: `No se puede eliminar la zona \"${zonaNombre}\" porque tiene ${personalSnapshot.size} personal(es) asociado(s)`\r\n        };\r\n      }\r\n\r\n      await deleteDoc(doc(db, this.collectionName, id));\r\n\r\n      return {\r\n        success: true,\r\n        message: 'Zona eliminada exitosamente'\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al eliminar zona'\r\n      };\r\n    }\r\n  }\r\n\r\n  async getStats() {\r\n    try {\r\n      const zonasSnapshot = await getDocs(collection(db, this.collectionName));\r\n      const personalSnapshot = await getDocs(collection(db, 'Personal'));\r\n\r\n      const zonas = zonasSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      const personal = personalSnapshot.docs.map(doc => doc.data());\r\n\r\n      const total = zonas.length;\r\n      const activas = zonas.filter(z => z.activa).length;\r\n\r\n      // Contar personal por zona\r\n      const personalPorZona = {};\r\n      personal.forEach(p => {\r\n        if (p.zona) {\r\n          personalPorZona[p.zona] = (personalPorZona[p.zona] || 0) + 1;\r\n        }\r\n      });\r\n\r\n      return {\r\n        success: true,\r\n        data: {\r\n          total,\r\n          activas,\r\n          inactivas: total - activas,\r\n          personalPorZona\r\n        }\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al obtener estadísticas'\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new ZonasService();"],"names":["_deleteDialog$socio","_deleteDialog$socio2","navigate","useNavigate","socios","setSocios","useState","loading","setLoading","error","setError","success","setSuccess","searchTerm","setSearchTerm","zonaFilter","setZonaFilter","estadoFilter","setEstadoFilter","zonas","setZonas","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","deleteDialog","setDeleteDialog","open","socio","selected","setSelected","useEffect","loadInitialData","loadSocios","handleSearch","async","zonasResult","zonasService","getZonas","Array","isArray","data","console","log","zona","result","sociosService","getSocios","sociosData","descendingComparator","a","b","filteredSocios","filter","_socio$dni","_socio$nombres","_socio$apellidos","_socio$celular","matchesSearch","dni","toLowerCase","includes","nombres","apellidos","celular","matchesZona","paginatedSocios","stableSort","array","comparator","stabilizedThis","map","el","index","sort","getComparator","slice","_jsxs","Container","maxWidth","children","Box","sx","mb","_jsx","Typography","variant","gutterBottom","color","Alert","severity","onClose","Paper","p","Grid","container","spacing","alignItems","item","xs","md","display","gap","TextField","fullWidth","placeholder","value","onChange","e","target","onKeyPress","key","InputProps","startAdornment","SearchIcon","mr","Button","onClick","disabled","minWidth","px","CircularProgress","size","FormControl","InputLabel","Select","label","MenuItem","nombre","id","justifyContent","startIcon","ClearIcon","clearFilters","AddIcon","length","mt","bgcolor","borderRadius","DeleteIcon","bulkDelete","message","width","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","event","newSelected","n","sortable","column","sortDirection","TableSortLabel","active","direction","handleRequestSort","property","TableBody","colSpan","align","isItemSelected","indexOf","hover","handleClick","selectedIndex","concat","Avatar","height","charAt","toUpperCase","fontFamily","fontWeight","Chip","Tooltip","title","IconButton","ViewIcon","EditIcon","TablePagination","rowsPerPageOptions","component","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","labelRowsPerPage","labelDisplayedRows","_ref","from","to","Dialog","DialogTitle","DialogContent","DialogActions","deleteSocio","constructor","this","collectionName","createSocio","socioData","currentUser","auth","Error","estado","fechaRegistro","serverTimestamp","fechaCreacion","fechaModificacion","creadoPor","uid","addDoc","collection","db","getErrorMessage","options","arguments","undefined","pageSize","campana","q","query","limit","getDocs","docs","doc","term","total","getSocioById","docSnap","getDoc","exists","updateSocio","updates","updateData","modificadoPor","updateDoc","deleteDoc","getStats","activos","s","startOfMonth","Date","setDate","setHours","nuevosMes","_s$fechaCreacion","_s$fechaCreacion$toDa","toDate","call","zonaStats","forEach","inactivos","ids","batch","writeBatch","docRef","delete","commit","updateEstado","nuevoEstado","errorMessages","code","createZona","zonaData","activa","snapshot","getZonasActivas","where","updateZona","getZonaById","deleteZona","zonaDoc","zonaNombre","personalSnapshot","empty","zonasSnapshot","personal","activas","z","personalPorZona","inactivas"],"sourceRoot":""}