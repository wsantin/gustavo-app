{"version":3,"file":"static/js/248.012c07c7.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js","services/zonas.service.js","utils/validators.js","../node_modules/@mui/material/esm/CardContent/cardContentClasses.js","../node_modules/@mui/material/esm/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/LocationOn.js","../node_modules/@mui/icons-material/esm/Assessment.js","../node_modules/@mui/icons-material/esm/People.js","pages/zonas/ZonasManager.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root'\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import {\r\n  collection,\r\n  doc,\r\n  addDoc,\r\n  getDocs,\r\n  getDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  serverTimestamp\r\n} from 'firebase/firestore';\r\nimport { db, auth } from './firebase';\r\n\r\nclass ZonasService {\r\n  constructor() {\r\n    this.collectionName = 'zonas';\r\n  }\r\n\r\n  async createZona(zonaData) {\r\n    try {\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n\r\n      const zona = {\r\n        ...zonaData,\r\n        activa: zonaData.activa !== undefined ? zonaData.activa : true,\r\n        fechaCreacion: serverTimestamp(),\r\n        fechaModificacion: serverTimestamp(),\r\n        creadoPor: currentUser.uid\r\n      };\r\n\r\n      const docRef = await addDoc(collection(db, this.collectionName), zona);\r\n      \r\n      return {\r\n        success: true,\r\n        id: docRef.id,\r\n        data: { id: docRef.id, ...zona },\r\n        message: 'Zona creada exitosamente'\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al crear zona'\r\n      };\r\n    }\r\n  }\r\n\r\n  async getZonas() {\r\n    try {\r\n      const q = query(\r\n        collection(db, this.collectionName),\r\n        orderBy('nombre', 'asc')\r\n      );\r\n      \r\n      const snapshot = await getDocs(q);\r\n      const zonas = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n\r\n      return {\r\n        success: true,\r\n        data: zonas\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al obtener zonas'\r\n      };\r\n    }\r\n  }\r\n\r\n  async getZonasActivas() {\r\n    try {\r\n      const q = query(\r\n        collection(db, this.collectionName),\r\n        where('activa', '==', true),\r\n        orderBy('nombre', 'asc')\r\n      );\r\n      \r\n      const snapshot = await getDocs(q);\r\n      const zonas = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n\r\n      return {\r\n        success: true,\r\n        data: zonas\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al obtener zonas activas'\r\n      };\r\n    }\r\n  }\r\n\r\n  async updateZona(id, updates) {\r\n    try {\r\n      await updateDoc(doc(db, this.collectionName, id), {\r\n        ...updates,\r\n        fechaModificacion: serverTimestamp()\r\n      });\r\n\r\n      return {\r\n        success: true,\r\n        message: 'Zona actualizada exitosamente'\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al actualizar zona'\r\n      };\r\n    }\r\n  }\r\n\r\n  async getZonaById(id) {\r\n    try {\r\n      const docSnap = await getDoc(doc(db, this.collectionName, id));\r\n      \r\n      if (docSnap.exists()) {\r\n        return {\r\n          success: true,\r\n          data: {\r\n            id: docSnap.id,\r\n            ...docSnap.data()\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          error: 'Zona no encontrada'\r\n        };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al obtener zona'\r\n      };\r\n    }\r\n  }\r\n\r\n  async deleteZona(id) {\r\n    try {\r\n      // Primero obtener el nombre de la zona para verificar socios\r\n      const zonaDoc = await getDoc(doc(db, this.collectionName, id));\r\n      if (!zonaDoc.exists()) {\r\n        return {\r\n          success: false,\r\n          error: 'Zona no encontrada'\r\n        };\r\n      }\r\n\r\n      const zonaNombre = zonaDoc.data().nombre;\r\n\r\n      // Verificar si hay personal usando esta zona (por nombre, no por ID)\r\n      const personalSnapshot = await getDocs(\r\n        query(collection(db, 'personal'), where('zona', '==', zonaNombre))\r\n      );\r\n\r\n      if (!personalSnapshot.empty) {\r\n        return {\r\n          success: false,\r\n          error: `No se puede eliminar la zona \"${zonaNombre}\" porque tiene ${personalSnapshot.size} personal(es) asociado(s)`\r\n        };\r\n      }\r\n\r\n      await deleteDoc(doc(db, this.collectionName, id));\r\n\r\n      return {\r\n        success: true,\r\n        message: 'Zona eliminada exitosamente'\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al eliminar zona'\r\n      };\r\n    }\r\n  }\r\n\r\n  async getStats() {\r\n    try {\r\n      const zonasSnapshot = await getDocs(collection(db, this.collectionName));\r\n      const personalSnapshot = await getDocs(collection(db, 'Personal'));\r\n\r\n      const zonas = zonasSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      const personal = personalSnapshot.docs.map(doc => doc.data());\r\n\r\n      const total = zonas.length;\r\n      const activas = zonas.filter(z => z.activa).length;\r\n\r\n      // Contar personal por zona\r\n      const personalPorZona = {};\r\n      personal.forEach(p => {\r\n        if (p.zona) {\r\n          personalPorZona[p.zona] = (personalPorZona[p.zona] || 0) + 1;\r\n        }\r\n      });\r\n\r\n      return {\r\n        success: true,\r\n        data: {\r\n          total,\r\n          activas,\r\n          inactivas: total - activas,\r\n          personalPorZona\r\n        }\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Error al obtener estadísticas'\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new ZonasService();","import * as yup from 'yup';\r\n\r\nexport const loginSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email('Correo electrónico inválido')\r\n    .required('El correo electrónico es requerido'),\r\n  password: yup\r\n    .string()\r\n    .min(6, 'La contraseña debe tener al menos 6 caracteres')\r\n    .required('La contraseña es requerida')\r\n});\r\n\r\nexport const registerSchema = yup.object({\r\n  displayName: yup\r\n    .string()\r\n    .min(3, 'El nombre debe tener al menos 3 caracteres')\r\n    .max(50, 'El nombre no puede tener más de 50 caracteres')\r\n    .required('El nombre es requerido'),\r\n  email: yup\r\n    .string()\r\n    .email('Correo electrónico inválido')\r\n    .required('El correo electrónico es requerido'),\r\n  password: yup\r\n    .string()\r\n    .min(6, 'La contraseña debe tener al menos 6 caracteres')\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\r\n      'La contraseña debe contener al menos una mayúscula, una minúscula y un número'\r\n    )\r\n    .required('La contraseña es requerida'),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref('password'), null], 'Las contraseñas no coinciden')\r\n    .required('Confirme su contraseña')\r\n});\r\n\r\nexport const resetPasswordSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email('Correo electrónico inválido')\r\n    .required('El correo electrónico es requerido')\r\n});\r\n\r\nexport const changePasswordSchema = yup.object({\r\n  currentPassword: yup\r\n    .string()\r\n    .required('La contraseña actual es requerida'),\r\n  newPassword: yup\r\n    .string()\r\n    .min(6, 'La nueva contraseña debe tener al menos 6 caracteres')\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\r\n      'La contraseña debe contener al menos una mayúscula, una minúscula y un número'\r\n    )\r\n    .required('La nueva contraseña es requerida'),\r\n  confirmNewPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref('newPassword'), null], 'Las contraseñas no coinciden')\r\n    .required('Confirme su nueva contraseña')\r\n});\r\n\r\n// Validaciones para personal (anteriormente socios)\r\nexport const socioSchema = yup.object({\r\n  dni: yup\r\n    .string()\r\n    .matches(/^\\d{8}$/, 'El DNI debe tener exactamente 8 dígitos')\r\n    .required('El DNI es requerido'),\r\n  nombres: yup\r\n    .string()\r\n    .min(2, 'Los nombres deben tener al menos 2 caracteres')\r\n    .max(50, 'Los nombres no pueden tener más de 50 caracteres')\r\n    .matches(/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$/, 'Los nombres solo pueden contener letras')\r\n    .required('Los nombres son requeridos'),\r\n  apellidos: yup\r\n    .string()\r\n    .min(2, 'Los apellidos deben tener al menos 2 caracteres')\r\n    .max(50, 'Los apellidos no pueden tener más de 50 caracteres')\r\n    .matches(/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$/, 'Los apellidos solo pueden contener letras')\r\n    .required('Los apellidos son requeridos'),\r\n  celular: yup\r\n    .string()\r\n    .matches(/^9\\d{8}$/, 'El celular debe empezar con 9 y tener 9 dígitos')\r\n    .required('El celular es requerido'),\r\n  zona: yup\r\n    .string()\r\n    .required('La zona es requerida'),\r\n  direccion: yup\r\n    .string()\r\n    .min(5, 'La dirección debe tener al menos 5 caracteres')\r\n    .max(100, 'La dirección no puede tener más de 100 caracteres')\r\n    .required('La dirección es requerida'),\r\n  fechaJuramentacion: yup\r\n    .date()\r\n    .max(new Date(), 'La fecha de juramentación no puede ser futura')\r\n    .required('La fecha de juramentación es requerida')\r\n});\r\n\r\n// Validaciones para zonas\r\nexport const zonaSchema = yup.object({\r\n  nombre: yup\r\n    .string()\r\n    .min(3, 'El nombre debe tener al menos 3 caracteres')\r\n    .max(50, 'El nombre no puede tener más de 50 caracteres')\r\n    .required('El nombre es requerido'),\r\n  descripcion: yup\r\n    .string()\r\n    .max(200, 'La descripción no puede tener más de 200 caracteres')\r\n    .optional()\r\n});\r\n\r\n// Validaciones para campañas\r\nexport const campanaSchema = yup.object({\r\n  nombre: yup\r\n    .string()\r\n    .min(3, 'El nombre debe tener al menos 3 caracteres')\r\n    .max(100, 'El nombre no puede tener más de 100 caracteres')\r\n    .required('El nombre es requerido'),\r\n  descripcion: yup\r\n    .string()\r\n    .max(500, 'La descripción no puede tener más de 500 caracteres')\r\n    .optional(),\r\n  fechaInicio: yup\r\n    .date()\r\n    .required('La fecha de inicio es requerida'),\r\n  fechaFin: yup\r\n    .date()\r\n    .min(yup.ref('fechaInicio'), 'La fecha de fin debe ser posterior a la de inicio')\r\n    .required('La fecha de fin es requerida'),\r\n  activa: yup\r\n    .boolean()\r\n    .required('El estado es requerido')\r\n});","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root'\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7m0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5\"\n}), 'LocationOn');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2M9 17H7v-7h2zm4 0h-2V7h2zm4 0h-2v-4h2z\"\n}), 'Assessment');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5s-3 1.34-3 3 1.34 3 3 3m-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5 5 6.34 5 8s1.34 3 3 3m0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5m8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5\"\n}), 'People');","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Alert,\r\n  CircularProgress,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Search as SearchIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  LocationOn as LocationIcon,\r\n  People as PeopleIcon,\r\n  Assessment as StatsIcon\r\n} from '@mui/icons-material';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { zonaSchema } from '../../utils/validators';\r\nimport zonasService from '../../services/zonas.service';\r\n\r\nfunction ZonasManager() {\r\n  const [zonas, setZonas] = useState([]);\r\n  const [stats, setStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  \r\n  // Modal states\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const [selectedZona, setSelectedZona] = useState(null);\r\n  const [formData, setFormData] = useState({ nombre: '', descripcion: '', activa: true });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n    setValue\r\n  } = useForm({\r\n    resolver: yupResolver(zonaSchema)\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [zonasResult, statsResult] = await Promise.all([\r\n        zonasService.getZonas(),\r\n        zonasService.getStats()\r\n      ]);\r\n\r\n      if (zonasResult.success) {\r\n        setZonas(zonasResult.data);\r\n      } else {\r\n        setError(zonasResult.error);\r\n      }\r\n\r\n      if (statsResult.success) {\r\n        setStats(statsResult.data);\r\n      }\r\n    } catch (error) {\r\n      setError('Error al cargar datos');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const defaultData = { nombre: '', descripcion: '', activa: true };\r\n    setFormData(defaultData);\r\n    reset(defaultData);\r\n    setSelectedZona(null);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const handleEdit = (zona) => {\r\n    setSelectedZona(zona);\r\n    const data = {\r\n      nombre: zona.nombre,\r\n      descripcion: zona.descripcion || '',\r\n      activa: zona.activa\r\n    };\r\n    setFormData(data);\r\n    setValue('nombre', data.nombre);\r\n    setValue('descripcion', data.descripcion);\r\n    setValue('activa', data.activa);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleDelete = (zona) => {\r\n    setSelectedZona(zona);\r\n    setShowDeleteDialog(true);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      let result;\r\n      \r\n      if (selectedZona) {\r\n        result = await zonasService.updateZona(selectedZona.id, data);\r\n      } else {\r\n        result = await zonasService.createZona(data);\r\n      }\r\n\r\n      if (result.success) {\r\n        setSuccess(result.message);\r\n        // Limpiar form y cerrar modal\r\n        const defaultData = { nombre: '', descripcion: '', activa: true };\r\n        setFormData(defaultData);\r\n        reset(defaultData);\r\n        setSelectedZona(null);\r\n        setShowAddModal(false);\r\n        setShowEditModal(false);\r\n        // Recargar datos después de un pequeño delay para evitar problemas\r\n        setTimeout(() => loadData(), 100);\r\n      } else {\r\n        setError(result.error);\r\n      }\r\n    } catch (error) {\r\n      setError('Error inesperado');\r\n    }\r\n  };\r\n\r\n  const confirmDelete = async () => {\r\n    try {\r\n      const result = await zonasService.deleteZona(selectedZona.id);\r\n      \r\n      if (result.success) {\r\n        setSuccess(result.message);\r\n        setShowDeleteDialog(false);\r\n        loadData();\r\n      } else {\r\n        setError(result.error);\r\n      }\r\n    } catch (error) {\r\n      setError('Error al eliminar zona');\r\n    }\r\n  };\r\n\r\n  const filteredZonas = zonas.filter(zona => {\r\n    if (!searchTerm) return true;\r\n    const term = searchTerm.toLowerCase();\r\n    return (\r\n      zona.nombre.toLowerCase().includes(term) ||\r\n      (zona.descripcion || '').toLowerCase().includes(term)\r\n    );\r\n  });\r\n\r\n  const formatDate = (date) => {\r\n    if (!date) return '-';\r\n    try {\r\n      const d = date.toDate ? date.toDate() : new Date(date);\r\n      return d.toLocaleDateString('es-ES');\r\n    } catch {\r\n      return '-';\r\n    }\r\n  };\r\n\r\n  const ZonaFormModal = ({ open, onClose, title, isEdit = false }) => (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <LocationIcon color=\"primary\" />\r\n        {title}\r\n      </DialogTitle>\r\n      <Box component=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <DialogContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoFocus\r\n                fullWidth\r\n                label=\"Nombre de la zona\"\r\n                {...register('nombre')}\r\n                error={!!errors.nombre}\r\n                helperText={errors.nombre?.message}\r\n                placeholder=\"Ej: Zona Norte, Centro, etc.\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Descripción (opcional)\"\r\n                multiline\r\n                rows={3}\r\n                {...register('descripcion')}\r\n                error={!!errors.descripcion}\r\n                helperText={errors.descripcion?.message}\r\n                placeholder=\"Descripción detallada de la zona...\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                <Typography variant=\"body1\">Estado:</Typography>\r\n                <Button\r\n                  variant={formData.activa === true ? 'contained' : 'outlined'}\r\n                  color=\"success\"\r\n                  onClick={() => {\r\n                    setFormData(prev => ({ ...prev, activa: true }));\r\n                    setValue('activa', true);\r\n                  }}\r\n                  size=\"small\"\r\n                >\r\n                  Activa\r\n                </Button>\r\n                <Button\r\n                  variant={formData.activa === false ? 'contained' : 'outlined'}\r\n                  color=\"error\"\r\n                  onClick={() => {\r\n                    setFormData(prev => ({ ...prev, activa: false }));\r\n                    setValue('activa', false);\r\n                  }}\r\n                  size=\"small\"\r\n                >\r\n                  Inactiva\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onClose}>Cancelar</Button>\r\n          <Button type=\"submit\" variant=\"contained\">\r\n            {isEdit ? 'Actualizar' : 'Crear'} Zona\r\n          </Button>\r\n        </DialogActions>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Box sx={{ mb: 3 }}>\r\n        <Typography variant=\"h4\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <LocationIcon />\r\n          Gestión de Zonas\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"text.secondary\">\r\n          Administra las zonas geográficas del sistema\r\n        </Typography>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }} onClose={() => setError('')}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {success && (\r\n        <Alert severity=\"success\" sx={{ mb: 3 }} onClose={() => setSuccess('')}>\r\n          {success}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Estadísticas */}\r\n      {stats && (\r\n        <Grid container spacing={3} sx={{ mb: 3 }}>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                  <StatsIcon color=\"primary\" />\r\n                  <Box>\r\n                    <Typography color=\"text.secondary\" gutterBottom>\r\n                      Total Zonas\r\n                    </Typography>\r\n                    <Typography variant=\"h4\">{stats.total}</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                  <LocationIcon color=\"success\" />\r\n                  <Box>\r\n                    <Typography color=\"text.secondary\" gutterBottom>\r\n                      Activas\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" color=\"success.main\">{stats.activas}</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                  <LocationIcon color=\"error\" />\r\n                  <Box>\r\n                    <Typography color=\"text.secondary\" gutterBottom>\r\n                      Inactivas\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" color=\"error.main\">{stats.inactivas}</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                  <PeopleIcon color=\"info\" />\r\n                  <Box>\r\n                    <Typography color=\"text.secondary\" gutterBottom>\r\n                      Con Personal\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" color=\"info.main\">\r\n                      {Object.keys(stats.personalPorZona).length}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      {/* Controles */}\r\n      <Paper sx={{ p: 3, mb: 3 }}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              placeholder=\"Buscar zonas...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} />,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Box sx={{ display: 'flex', gap: 1, justifyContent: 'flex-end' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<AddIcon />}\r\n                onClick={handleAdd}\r\n              >\r\n                Nueva Zona\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      {/* Tabla */}\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Nombre</TableCell>\r\n                <TableCell>Descripción</TableCell>\r\n                <TableCell>Estado</TableCell>\r\n                <TableCell>Personal</TableCell>\r\n                <TableCell>Fecha Creación</TableCell>\r\n                <TableCell>Acciones</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align=\"center\" sx={{ py: 4 }}>\r\n                    <CircularProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : filteredZonas.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align=\"center\" sx={{ py: 4 }}>\r\n                    <Typography color=\"text.secondary\">\r\n                      {searchTerm ? 'No se encontraron zonas' : 'No hay zonas registradas'}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                filteredZonas.map((zona) => (\r\n                  <TableRow key={zona.id}>\r\n                    <TableCell>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                        <LocationIcon color=\"primary\" />\r\n                        <Typography variant=\"subtitle2\">{zona.nombre}</Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {zona.descripcion || 'Sin descripción'}\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Chip\r\n                        label={zona.activa ? 'Activa' : 'Inactiva'}\r\n                        color={zona.activa ? 'success' : 'error'}\r\n                        size=\"small\"\r\n                        variant=\"filled\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Chip\r\n                        label={stats?.personalPorZona?.[zona.nombre] || 0}\r\n                        color=\"info\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        icon={<PeopleIcon />}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{formatDate(zona.fechaCreacion)}</TableCell>\r\n                    <TableCell>\r\n                      <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n                        <Tooltip title=\"Editar zona\">\r\n                          <IconButton size=\"small\" onClick={() => handleEdit(zona)}>\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Eliminar zona\">\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            color=\"error\"\r\n                            onClick={() => handleDelete(zona)}\r\n                          >\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Box>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n\r\n      {/* Modales */}\r\n      <ZonaFormModal\r\n        open={showAddModal}\r\n        onClose={() => setShowAddModal(false)}\r\n        title=\"Nueva Zona\"\r\n      />\r\n\r\n      <ZonaFormModal\r\n        open={showEditModal}\r\n        onClose={() => setShowEditModal(false)}\r\n        title=\"Editar Zona\"\r\n        isEdit\r\n      />\r\n\r\n      {/* Dialog de eliminación */}\r\n      <Dialog open={showDeleteDialog} onClose={() => setShowDeleteDialog(false)}>\r\n        <DialogTitle>Confirmar Eliminación</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            ¿Estás seguro de que deseas eliminar la zona{' '}\r\n            <strong>\"{selectedZona?.nombre}\"</strong>?\r\n          </Typography>\r\n          {stats?.personalPorZona?.[selectedZona?.nombre] && (\r\n            <Alert severity=\"warning\" sx={{ mt: 2 }}>\r\n              Esta zona tiene {stats.personalPorZona[selectedZona.nombre]} persona(s) asociada(s).\r\n            </Alert>\r\n          )}\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n            Esta acción no se puede deshacer.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowDeleteDialog(false)}>Cancelar</Button>\r\n          <Button onClick={confirmDelete} color=\"error\" variant=\"contained\">\r\n            Eliminar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ZonasManager;"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","name","overflow","React","inProps","ref","props","useDefaultProps","className","raised","other","ownerState","classes","composeClasses","root","useUtilityClasses","_jsx","clsx","elevation","undefined","constructor","this","collectionName","createZona","zonaData","currentUser","auth","Error","zona","activa","fechaCreacion","serverTimestamp","fechaModificacion","creadoPor","uid","docRef","addDoc","collection","db","success","id","data","message","error","getZonas","q","query","orderBy","snapshot","getDocs","docs","map","doc","getZonasActivas","where","updateZona","updates","updateDoc","getZonaById","docSnap","getDoc","exists","deleteZona","zonaDoc","zonaNombre","nombre","personalSnapshot","empty","deleteDoc","size","getStats","zonasSnapshot","zonas","personal","total","length","activas","filter","z","personalPorZona","forEach","p","inactivas","loginSchema","yup","email","required","password","min","socioSchema","displayName","max","matches","confirmPassword","oneOf","currentPassword","newPassword","confirmNewPassword","dni","nombres","apellidos","celular","direccion","fechaJuramentacion","Date","zonaSchema","descripcion","optional","fechaInicio","fechaFin","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","createSvgIcon","d","_stats$personalPorZon2","setZonas","useState","stats","setStats","loading","setLoading","setError","setSuccess","searchTerm","setSearchTerm","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showDeleteDialog","setShowDeleteDialog","selectedZona","setSelectedZona","formData","setFormData","register","handleSubmit","formState","errors","reset","setValue","useForm","resolver","yupResolver","useEffect","loadData","async","zonasResult","statsResult","Promise","all","zonasService","onSubmit","result","defaultData","setTimeout","filteredZonas","term","toLowerCase","includes","formatDate","date","toDate","toLocaleDateString","ZonaFormModal","_ref","_errors$nombre","_errors$descripcion","open","onClose","title","isEdit","_jsxs","Dialog","maxWidth","fullWidth","children","DialogTitle","sx","display","alignItems","gap","LocationIcon","color","Box","DialogContent","Grid","container","spacing","item","xs","TextField","autoFocus","label","helperText","placeholder","multiline","rows","Typography","variant","Button","onClick","prev","DialogActions","type","Container","mb","gutterBottom","Alert","severity","sm","md","Card","CardContent","StatsIcon","PeopleIcon","Object","keys","value","onChange","e","target","InputProps","startAdornment","SearchIcon","mr","justifyContent","startIcon","AddIcon","handleAdd","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","colSpan","align","py","CircularProgress","_stats$personalPorZon","Chip","icon","Tooltip","IconButton","handleEdit","EditIcon","handleDelete","DeleteIcon","mt"],"sourceRoot":""}